一、 复习搭建 Struts2 的开发环境 ：3个步骤
1. action VS Action 类
    > 属性的名字必须遵守与 JavaBeans 属性名相同的命名规则。
      属性的类型可以是任意类型，从字符串到非字符串（基本数据库类型）之间的数据转换可以自动发生
    > 必须有一个不带参的构造器： 通过反射创建实例
    > 至少有一个供 struts 在执行这个 action 时调用的方法
    > 同一个 Action 类可以包含多个 action 方法。
    > Struts2 会为每一个 HTTP 请求创建一个新的 Action 实例，即 Action 不是单例的，是线性安全的 
    
二、在 Action 中访问 WEB 资源？
    1). 什么是 WEB 资源?
         HttpServletRequest、HttpSession、ServletContext 等原生的 Servlet API
    2). 为什么访问 WEB 资源？
         B\S 的应用的 Controller 中必然需要访问 WEB 资源：向域对象中读写属性，读写 Cookie, 获取 realPath ....
    3). 如何访问？
          I 和 Servlet API 解耦的方式 ：只能访问有限的 Servlet API 对象，且只能访问其有限的方法（读取请求参数，读写域对象的属性，使 session 失效....）
            > 使用 ActionContex
            > XxxAware 接口
            > 选用的建议：若一个 Action 类中有多个 action 方法，且多个方法都需要使用域对象的 Map 或 parameters , 则建议使用实现 aware 接口的方式
            > session 对应的 Map 实际上是 SessionMap 类型的！强转后若调用其 invalidate() 方法，可以使其 session 失效！
          II 和 Servlet API 耦合的方式：可以访问更多的 Servlet API 对象，且可以调用其原生的方法。
            > 使用 ServletAcationContext
            > 实现  ServletXxxAware 接口
三、关于 Struts2 请求的扩展 名问题
  1) org.apache.struts2 包下的 default.properties 中配置了 Struts2 应用的一些常量
  2) struts.action.extension 定义了当前 Struts2 应用可以接受的请求扩展名
  3) 可以在 struts.xml 文件中以常量配置方式修改 default.properties 所配置的常量
       <constant name="struts.action.extension" value="action,do,"></constant>
四、ActionSupport
  1) ActionSupport 是默认的 Action 类：若某一个 action 节点没有没有配置 class 属性，则 ActionSupport 即为待执行的 Action 类，
               而 execute 方法即为要默认执行的 action 方法
       <action name="testActionSupport">
          <result>testActionSupport.jsp</result>
       </action>
               等同于
       <action name="testActionSupport" class="com.opensymphony.xwork2.ActionSupport" method="execute">
          <result>testActionSupport.jsp</result>
       </action> 
  2) 在手工完成字段验证，显示错误消息，国际化等情况下，推荐继承 ActionSupport.
五、result:
  1) result 是 action 节点的子节点
  2) result 代表 action 方法执行后，可能去的一个目的地
  3) 一个 action 节点可以配置多个 result 子节点
  4) result 的 name 属性值对应着 action 方法可能有的一个返回值
       <result name="result_success">/result_success.jsp</result>
  5) result 总共有两个属性，还有一个是 type 属性 ，表示结果的响应类型
  6) result 的 type 属性值在 struts-default 包的 result-types 节点的 name 属性中定义
                 常用的有： 
        > dispatcher(默认的)：转发 同 Servlet 中的转发 ，  （只发送一个请求）  例如: http://localhost:8081/Struts2-3/testResultAction.do?number=4
        > redirect:重定向   （两个请求）   testResultAction.do?number=5 和  http://localhost:8081/Struts2-3/result_login.jsp
        > redirectAction:重定向一个 action
                                  注意：通过 redirect 的响应类型也可以便捷的实现 redirectAction 的功能！
            <result name="result_index" type="redirectAction">
                <param name="actionName">testAction</param>
                <param name="namespace">/result_test</param>
            </result> 
            OR
            <result name="result_index" type="redirect">/result_test/testAction.do</result>          
        > chain:转发到一个 action
                                  注意： 不能通过 type="dispatcher" 的方式转发到一个 Action
                                  只能是
            <result name="test" type="chain">
                <param name="actionName">testAction</param>
                <param name="namespace">/result_test</param>
            </result>
                                 不能是
            <result name="test">/result_test/testAction.do</result>
六、关于值栈
   1) helloWorld 时，${productName} 读取 productName 值，实际上该属性并不在 request 等域对象中，而是从值栈中获取的。
   2) ValueStack:
       I  可以从 ActionContext 中获取值栈对象
       II 值栈分为两个逻辑部分：
            > Map 栈: 实际上是 OgnlContext 类型的，是个 Map , 也是对 ActionContext 的一个引用，里面保存着各种 Map:
              requestMap,sessionMap,applicationMap,parametersMap,attr
                                     >  对象栈: 实际上是 CompoundRoot 类型，是一个使用 ArrayList 定义的栈，里面保存各种和当前实例相关的对象。
                                是一个数据结构意义的栈。
七、Struts2 利用 s:property 标签 和 OGNL 表达式来读取值栈中的属性值
   1)  值栈中的属性值:
                         >  对于对象值：对象栈中某一个对象的属性值
        > Map 栈：request,session,application 的一个属性值或一个请求参数的值。
   2) 读取对象栈中对象的属性：
        > 1. 若想访问 Object Stack 里的某个对象的属性，可以使用以下几种形式之一：
            object.productName; object['productName'];object["productName"]
        > 2.ObjectStack 里的对象可以通过一个从零开始的下标引用。 ObjectStack 里的栈顶对象可以用 [0] 来引用，它下面的那个对象可以用 {1} 引用
             [0].message
        > 3.若在指定的对象里没有找到指定的属性，则到指定对象的下一个对象里继续搜索，即 [n] 的含义是从第 n 个开始搜索，而不是只搜索第 n 个对象
        > 4.若从栈顶对象开始搜索，则可以省略下标部分
        > 5.结合 s:property 标签：<s:property value="[0].message" /> <s:property value="message"/>
   3) 默认情况下，Action 对象会被 Struts2 自动的放到值栈的栈顶
八、Struts2 自动把 Action 对象放到值栈中
    1) 放入的时间点为： Struts2 终将调用 Action 类的 Action 方法，但在调用该方法之前：
        -> 先创建一个 StrutsActionProxy 对象
        -> 在创建 StrutsActionProxy 之后，对其进行初始化时，把 Action 对象放入了值栈中
九、常用的通用标签
   ① s:property : 打印值栈中的属性值: 对于对象栈，打印值栈中的属性值。
               对于 Map 栈，打印 request、session、application 的某个属性 或 某个请求参数的值
   ② s:url : 创建一个 URL 的字符串
   ③ s:set : 向 page,request,session,application 域对象中加入一个属性
                注意： 2.5.18 版本的struts2 中的 set标签的属性
       ① name（已经过时），id（已过时）, var 用来定义变量名
       ② value用来赋值新变量的值，如果没有指定value的值，则将valueStack栈顶的值赋给新的变量，value属性的类型为Object。
                     所以value值为字符串的时候要特别注意加单引号，即(value="'lkk'")，其中lkk就是字符串自动进行 OGNL 解析
       ③ scope属性，默认值为action，可选值为page，session，request，application和action，类型为String，用来指定范围
                     如果scope取值为默认值action，value属性的值将同时保存到request和Stack Context中。其实总结一点就是用scope定义一个范围，
                     然后到相应的范围中去取值，如果没有定义范围，就到request和Stack Context中去取值
   ④ s:push : 把一个对象在标签开始后压入到值栈中，标签结束时，弹出值栈
   ⑤ s:if , s:else , s:elseif:
   ⑥ s:iterator: 遍历集合的  把这个可遍历对象里的每一个元素依次压入和弹出
   ⑦ s:sort : 可以对集合总的元素进行排序
   ⑧ s:date : 可以对 Date 对象进行排版
   ⑨ s:a 可以使用 %{} 把属性包装起来，使其强制进行的 OGNL 解析